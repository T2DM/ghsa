<?php
use Drupal\Component\Utility\Html;
use Drupal\Core\Template\Attribute;
use Drupal\views\Entity\View;
use Drupal\views\Views;


// Add your custom theme override functions here.

/**
 * Implements hook_preprocess_block()
 */
function ghsa_foundation_preprocess_block(&$variables) {
}

/**
 * Implements template_preprocess_field().
 */
function ghsa_foundation_preprocess_field(&$variables) {
}

/**
 * Implements template_preprocess_html().
 *
 * Adds additional classes
 */
function ghsa_foundation_preprocess_html(&$variables) {
}

/**
 * Implements template_preprocess_node
 *
 * Add template suggestions and classes
 */
function ghsa_foundation_preprocess_node(&$variables) { 

  // Not sure which is better, to match the route or just get the node object
  // from $variables['node'].
  $node = \Drupal::routeMatch()->getParameter('node');

  if(in_array($node->id() , array(9 , 586 , 46 , 916 , 566) )){
   $variables['content_attributes']['class'][] = "row";
  }

  // Provide certain variables only for the Resources landing page, which is
  // node 46.
  // @see node--46.html.twig in the templates
  if($node->id() == 46) {
    $name = 'resources';
    $args = [];
    $view = Views::getView($name);

    $display_ids = ['featured_publications', 'featured_showcases', 'featured_guidance'];

    foreach($display_ids as $display_id) {
      //if (!$view || !$view->access($display_id)) {
        $variables[$display_id] = [
          '#type' => 'view',
          '#name' => $name,
          '#display_id' => $display_id,
          '#arguments' => $args,
        ];
      //}
      //else {
        //$variables[$display_id] = NULL;
      //}
    }
  }
  $vars = NULL;
}

/**
 * Implements template_preprocess_page
 *
 * Add convenience variables and template suggestions
 */
function ghsa_foundation_preprocess_page(&$variables) {
}

/**
 * Prepares variables for accordion.
 */
function ghsa_foundation_preprocess_views_view(&$variables) {
  $view = $variables['view'];

  if($view->current_display == 'accordion') {
    $handler  = $view->style_plugin;
    // Fetch classes from handler options.
    if ($handler->options['class']) {
      $class = explode(' ', $handler->options['class']);
      $class = array_map('\Drupal\Component\Utility\Html::cleanCssIdentifier', $class);
      if(!in_array('accordion')) {
        $class[] = 'accordion';
      }
    }
    else {
      $class[] = 'accordion';
    }
    $variables['accordion']['attributes'] = new Attribute(array('class' => $class));
    $variables['accordion']['meta'] = 'data-accordion';
    $variables['accordion']['type'] = $handler->options['type'];

    template_preprocess_views_view_unformatted($variables);
  }

  // Add the row class to appropriate places
  $views = ['events', 'issues', 'resources'];
  if(in_array($view->id(), $views)) {
    $displays = ['three_upcoming_events', 'three_past_events', 'issues_grid',
      'featured_publications', 'featured_showcases', 'featured_guidance'];
    if(in_array($view->current_display, $displays)) {
      $variables['row'] = 'row';
    }
  }

}

/**
 * Prepares variables for accordion. This is for the HTML List format in views.
 */
function ghsa_foundation_preprocess_views_view_list(&$variables) {
  static $index = 0;
  $view = $variables['view'];

  if($view->current_display == 'accordion') {
    $variables['panel_id'] = 'panel' . $index;
    if($index == 0) {
      $variables['is_active'] = 'is-active';
    }
    $index++;
  }
}